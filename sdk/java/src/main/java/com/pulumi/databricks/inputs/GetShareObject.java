// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetShareObject extends com.pulumi.resources.InvokeArgs {

    public static final GetShareObject Empty = new GetShareObject();

    @Import(name="addedAt", required=true)
    private Integer addedAt;

    public Integer addedAt() {
        return this.addedAt;
    }

    @Import(name="addedBy", required=true)
    private String addedBy;

    public String addedBy() {
        return this.addedBy;
    }

    /**
     * Description about the object.
     * 
     */
    @Import(name="comment")
    private @Nullable String comment;

    /**
     * @return Description about the object.
     * 
     */
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * Type of the object.
     * 
     */
    @Import(name="dataObjectType", required=true)
    private String dataObjectType;

    /**
     * @return Type of the object.
     * 
     */
    public String dataObjectType() {
        return this.dataObjectType;
    }

    /**
     * The name of the share
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the share
     * 
     */
    public String name() {
        return this.name;
    }

    @Import(name="sharedAs", required=true)
    private String sharedAs;

    public String sharedAs() {
        return this.sharedAs;
    }

    private GetShareObject() {}

    private GetShareObject(GetShareObject $) {
        this.addedAt = $.addedAt;
        this.addedBy = $.addedBy;
        this.comment = $.comment;
        this.dataObjectType = $.dataObjectType;
        this.name = $.name;
        this.sharedAs = $.sharedAs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetShareObject defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetShareObject $;

        public Builder() {
            $ = new GetShareObject();
        }

        public Builder(GetShareObject defaults) {
            $ = new GetShareObject(Objects.requireNonNull(defaults));
        }

        public Builder addedAt(Integer addedAt) {
            $.addedAt = addedAt;
            return this;
        }

        public Builder addedBy(String addedBy) {
            $.addedBy = addedBy;
            return this;
        }

        /**
         * @param comment Description about the object.
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable String comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param dataObjectType Type of the object.
         * 
         * @return builder
         * 
         */
        public Builder dataObjectType(String dataObjectType) {
            $.dataObjectType = dataObjectType;
            return this;
        }

        /**
         * @param name The name of the share
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder sharedAs(String sharedAs) {
            $.sharedAs = sharedAs;
            return this;
        }

        public GetShareObject build() {
            $.addedAt = Objects.requireNonNull($.addedAt, "expected parameter 'addedAt' to be non-null");
            $.addedBy = Objects.requireNonNull($.addedBy, "expected parameter 'addedBy' to be non-null");
            $.dataObjectType = Objects.requireNonNull($.dataObjectType, "expected parameter 'dataObjectType' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.sharedAs = Objects.requireNonNull($.sharedAs, "expected parameter 'sharedAs' to be non-null");
            return $;
        }
    }

}
